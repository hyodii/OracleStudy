SELECT USER
FROM DUAL;
--==>> HR

CREATE TABLE STUDENTS
( ST_ID     VARCHAR2(30) 
, ST_NAME   VARCHAR2(10)  
, ST_PW     NUMBER(7)           -- 주민번호 뒷자리
, CONSTRAINT STUDENTS_ST_ID_PK PRIMARY KEY(ST_ID)
);

-- 제약조건 수정
ALTER TABLE STUDENTS
MODIFY
( ST_ID CONSTRAINT STUDENTS_STUDENT_ID_NN NOT NULL
, ST_NAME CONSTRAINT STUDENTS_STUDENT_NAME_NN NOT NULL
, ST_PW CONSTRAINT STUDENTS_STUDENT_PASSWORD_NN NOT NULL
);

CREATE TABLE PROFESSORS
( PRO_ID     VARCHAR2(30) 
, PRO_NAME   VARCHAR2(10)  
, PRO_PW     NUMBER(7)           -- 주민번호 뒷자리
, CONSTRAINT PROFESSORS_PRO_ID_PK PRIMARY KEY(PRO_ID)
);

ALTER TABLE PROFESSORS
MODIFY
( PRO_NAME CONSTRAINT PROFESSORS_PRO_NAME_NN NOT NULL
, PRO_PW CONSTRAINT PROFESSORS_PRO_PW_NN NOT NULL
);


CREATE TABLE COURSE
( COURSE_ID     VARCHAR2(30) 
, PRO_ID        VARCHAR2(30)  
, COURSE_NAME   VARCHAR2(30)   
, C_START    DATE
, C_END      DATE
, CLASSROOM     VARCHAR2(30)
, CONSTRAINT COURSE_COURSE_ID_PK PRIMARY KEY(COURSE_ID)
, CONSTRAINT COURSE_PRO_ID_FK FOREIGN KEY(PRO_ID) 
                                       REFERENCES PROFESSORS(PRO_ID)
, CONSTRAINT COURSE_C_START_CK CHECK(C_DATE < C_END)
);

CREATE TABLE SUBJECTS
( SUB_ID            VARCHAR2(30)
, COURSE_ID         VARCHAR2(30)
, SUB_NAME          VARCHAR2(30)
, C_START           DATE
, C_END             DATE
, CLASSROOM         VARCHAR2(30)
, BOOK_NAME         VARCHAR2(30)
, ATTEND_PER        NUMBER(3)
, PRACTICAL_PER     NUMBER(3)
, WRITING_PER       NUMBER(3)
, CONSTRAINT SUBJECTS_SUB_ID_PK PRIMARY KEY(SUB_ID)
, CONSTRAINT SUBJECTS_COURSE_ID_FK FOREIGN KEY(COURSE_ID) 
                                       REFERENCES COURSE(COURSE_ID)
, CONSTRAINT SUBJECTS_C_START_CK CHECK(C_DATE < C_END)
, CONSTRAINT SUBJECTS_ATTEND_PER_CK CHECK(ATTEND_PER BETWEEN 0 AND 100)
, CONSTRAINT SUBJECTS_PRACTICAL_PER_CK CHECK(PRACTICAL_PER BETWEEN 0 AND 100)
, CONSTRAINT SUBJECTS_WRITING_PER_CK CHECK(WRITING_PER BETWEEN 0 AND 100)
);


CREATE TABLE SCORE
( PRO_ID            VARCHAR2(30)
, ST_ID             VARCHAR2(30)
, COURSE_ID         VARCHAR2(30)
, SUB_ID            VARCHAR2(30)
, ATTEND_SCORE      NUMBER(3)
, PRACTICAL_SCORE   NUMBER(3)
, WRITING_SCORE     NUMBER(3)
, CONSTRAINT SCORE_ST_ID_SUB_ID_PK PRIMARY KEY(ST_ID, SUB_ID)
, CONSTRAINT SCORE_PRO_ID_FK FOREIGN KEY(PRO_ID) 
                                       REFERENCES PROFESSORS(PRO_ID)
, CONSTRAINT SCORE_ST_ID_FK FOREIGN KEY(ST_ID) 
                                       REFERENCES STUDENTS(ST_ID)
, CONSTRAINT SCORE_COURSE_ID_FK FOREIGN KEY(COURSE_ID) 
                                       REFERENCES COURSE(COURSE_ID)
, CONSTRAINT SCORE_SUB_ID_FK FOREIGN KEY(SUB_ID) 
                                       REFERENCES SUBJECTS(SUB_ID)
, CONSTRAINT SCORE_ATTENT_SCORE_CK CHECK(ATTENT_SCORE BETWEEN 0 AND 100)
, CONSTRAINT SCORE_PRACTICAL_SCORE_CK CHECK(PRACTICAL_SCORE BETWEEN 0 AND 100)
, CONSTRAINT SCORE_WRITING_SCORE_CK CHECK(WRITING_SCORE BETWEEN 0 AND 100)
);


CREATE TABLE ENROLL
( ST_ID     VARCHAR2(30)
, COURSE_ID VARCHAR2(30)
, MID_DROP  NUMBER(1)               -- 중도 탈락: 0 
, CONSTRAINT ENROLL_ST_ID_FK FOREIGN KEY(ST_ID) 
                                       REFERENCES STUDENTS(ST_ID)
, CONSTRAINT ENROLL_COURSE_ID_FK FOREIGN KEY(COURSE_ID) 
                                       REFERENCES COURSE(COURSE_ID)
);

CREATE TABLE ADMINISTRATOR
( ADMIN_ID  VARCHAR2(30)
, ADMIN_PW  VARCHAR2(30)
, CONSTRAINT ADMINISTRATOR_ADMIN_ID_PK PRIMARY KEY(ADMIN_ID)
);


